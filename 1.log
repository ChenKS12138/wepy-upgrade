<template>
  <BaseContainer navTitle="NJUPT" :openPage.sync="openPage">
    <view slot="qy-content">
      <view wx:if="{{hiGraduateModal}}" class="hi-graduate" @tap="hideHiGraduate">
        <image
          src="https://static.airbob.org/under-graduate/memory/xiao.png"
          class="hi-graduate-img"
        />
        <view class="hi-graduate-talk">
          <view class="graduate-talk-title">南邮记忆</view>
          <view class="graduate-talk-content">亲爱的{{graduateName}}</view>
          <view class="graduate-talk-content">欢迎回来！</view>
          <view class="graduate-divide"></view>
          <view class="graduate-talk-content">小程序将永久安全地保存你校园记忆，</view>
          <view class="graduate-talk-content">你可以随时查看，</view>
          <view class="graduate-talk-content">但无法再次刷新这些数据。</view>
          <view class="graduate-divide"></view>
          <view class="graduate-talk-content">你可以在“我的”中关闭记忆模式，</view>
          <view class="graduate-talk-content">关闭后数据将全部清空，</view>
          <view class="graduate-talk-content">且操作不可逆。</view>
        </view>
      </view>
      <!-- <QyPopUp :openPage.sync="openPage" link="https://qingyou.njupt.edu.cn/bgd3" /> -->
      <view class="perfect-info" wx:if="{{commandInfoStatus}}" @tap="closeCommandInfo">
        <view class="perfect-info-body">
          <view class="perfect-img">
            <image src="https://static.airbob.org/under-graduate/kl.png" />
          </view>
          <view class="perfect-info-card">
            <view class="command-avatar">
              <view>
                <image class="command-avatar-img" src="{{assoInfo.avatar}}" />
              </view>
            </view>
            <view class="perfect-info-tip">发现了社团口令{{assoInfo.command}}</view>
            <view class="command-name">{{assoInfo.info.fullname}}</view>
            <view class="submission" @tap.stop="codeToDetail">
              <view>点击查看</view>
            </view>
          </view>
        </view>
      </view>
      <view
        class="perfect-info"
        wx:if="{{importantInfoStatus}}"
        @tap.stop="closeNotification"
        data-id="{{importantInfo.id}}"
      >
        <view class="perfect-info-body notification" @tap.stop="prevent">
          <view class="perfect-img notification">
            <image
              src="https://static.airbob.org/under-graduate/QjE2MDEyMzI3LXl1cm9uZy5wbmc=?tdsourcetag=s_pctim_aiomsg"
            />
          </view>
          <view class="perfect-info-card notification">
            <view class="perfect-info-tip notification">{{importantInfo.title}}</view>
            <view class="notification-info">
              <repeat for="{{importantInfo.content}}" key="index" index="index" item="content">
                <view>{{content}}</view>
              </repeat>
            </view>
            <view
              class="notification-close"
              @tap.stop="closeNotification"
              data-id="{{importantInfo.id}}"
            >我知道了</view>
          </view>
        </view>
      </view>
      <navigator
        class="open-page-container"
        target="{{navigatorTarget}}"
        app-id="{{navigatorAppId}}"
        url="{{navigatorUrl}}"
        style="background-image:url('{{displayPic}}');"
        hidden="{{!openPage}}"
      >
        <view class="pass-open-page-container" @tap.stop="passOpenPage">
          <view class="pass-open-page">跳过{{passTime}}秒</view>
        </view>
      </navigator>
      <view
        class="container"
        hidden="{{openPage}}"
        style="position: {{commandInfoStatus || annualStatus ? 'fixed' : 'static'}}"
      >
        <view class="navbar">
          <view class="search-bar" @tap="goSearch">
            <view class="virsual-placeholder">
              <image
                src="https://static.airbob.org/under-graduate/%E6%90%9C%E7%B4%A2.png"
                class="search-icon"
              />
              <text>{{schoolTalkText}}</text>
            </view>
            <input type="text" class="search-input" @focus="focus" />
          </view>
          <!-- <image src="{{isNewInfo ? 'https://static.airbob.org/under-graduate/alert-active.png' : 'https://static.airbob.org/under-graduate/alert.png'}}" class="alert-img {{isNewInfo ? 'shake' : ''}}" @tap="goInfobox"/> -->
        </view>
        <view class="functional">
          <repeat for="{{functionalList}}">
            <view
              class="functional-item"
              @tap="moveTo"
              data-path="{{item.path}}"
              data-name="{{item.name}}"
              data-isnew="{{item.isNew}}"
            >
              <image src="{{item.icon}}" class="functional-item-image">
              {{item.name}}
              <view class="image-red-dot" hidden="{{ !item.isNew }}"></view>
            </view>
          </repeat>
        </view>
        <view class="epidemic-container">
          <view class="epidemic-img" @tap="goEpidemic"/>
        </view>
        <view class="splitLine"></view>
        <!-- <navigator open-type="navigate" target="miniProgram" app-id="wx7d66d77988bbeab3" style="width:750rpx;">
        <view class="school-talk-container">
          <image src="https://static.airbob.org/under-graduate/跳转bar.png" mode="aspectFit" class="school-talk" />
        </view>
        </navigator>-->
        <view class="notification-container" @tap="goInfobox" wx:if="{{!swiperInfo[0]}}">
          <view class="notification-image"></view>
          <view class="notification-content">
            <view class="swiper-content">你没有新消息哟～</view>
            <view class="notification-arrow"></view>
          </view>
        </view>
        <view class="notification-container" @tap="goInfobox" wx:else>
          <view class="notification-image">
            <view class="notification-oval {{isNewInfo?'move':''}}">
              <span>{{swiperInfo.length}}</span>
            </view>
          </view>
          <swiper class="notification-content" autoplay="true" vertical="true" circular="true">
            <repeat for="{{swiperInfo}}" item="item" index="index" key="key">
              <swiper-item>
                <view class="swiper-content">{{item.title}}</view>
              </swiper-item>
            </repeat>
          </swiper>
          <view class="notification-arrow"></view>
        </view>
        <!-- <navigator open-type="navigate" target="miniProgram" app-id="wxa16acae9f9d131fb" style="width:750rpx;">
                            <view class="school-talk-container">
                                <image src="https://static.airbob.org/under-graduate/home-bannerbar-chat@3x.png" mode="aspectFit" class="school-talk"/>
                            </view>
        </navigator>-->
        <!-- <navigator url="../others-page/pages/association" style="width:750rpx;">
                            <view class="school-talk-container">
                                <image src="https://static.airbob.org/club-enter.png" mode="aspectFill" class="school-talk"/>
                            </view>
        </navigator>-->
        <!-- <navigator url="../others-edu-page/pages/avatar" style="width:750rpx;">
                            <view class="school-talk-container">
                                <image src="https://static.airbob.org/under-graduate/wsj_index.png" mode="aspectFit" class="school-talk"/>
                            </view>
        </navigator>-->
        <view class="split-line"></view>
        <view class="course-container">
          <view class="container-top">
            <view class="container-top-title">今日课表</view>
            <span @tap="showAllCourse" data-name="课表">完整课表</span>
            <view class="arrow"></view>
          </view>
          <view class="boxLoading" hidden="{{loadHide}}"></view>
          <view class="nocourse-list" wx:if="{{noCourseItem}}">
            <view class="nocourse-image"></view>
            <view class="nocourse-word" wx:if="{{!graduateIdentity}}">今日无课，要合理安排时间哦</view>
            <view class="graduate-word" wx:else>
              <view>毕业的你，已经不会再有新的大学课程</view>
              <view>但人生处处都是课堂</view>
            </view>
          </view>
          <scroll-view
            class="course-list"
            scroll-x="true"
            wx:if="{{!noCourseItem}}"
            scroll-into-view="{{courseToView}}"
            scroll-with-animation="true"
          >
            <repeat for="{{courses}}" index="index" key="key" item="item">
              <view class="course-item" style="background: {{item.bgc}}" id="course{{index+1}}">
                <view class="course-thing">
                  <view style="font-size:28rpx;">{{item.name}}</view>
                  <view>{{item.time}}</view>
                  <view>
                    {{item.locale}}
                    <span wx:if="{{item.locale}}">| {{item.teacher}}</span>
                  </view>
                </view>
              </view>
            </repeat>
          </scroll-view>
        </view>
        <view class="split-line"></view>
        <view class="card-container">
          <view class="container-top">
            <view class="container-top-title">一卡通</view>
            <span @tap.stop="goYkt" data-name="一卡通">完整记录</span>
            <view class="arrow"></view>
          </view>
          <view class="campus-card">
            <view class="content">
              <view class="content-container">
                <view wx:if="{{isBalanceOk}}">
                  <span>余额:</span>
                  <span class="bigger">{{balance}}</span>
                  <span>元</span>
                  <view>更新时间：{{time}}</view>
                </view>
                <view wx:else>
                  <span class="bigger">{{balance}}</span>
                </view>
                <view class="refresh-container">
                  <image
                    class="refresh {{isRefreshYkt?'refresh-rolling':''}}"
                    @tap.stop="refreshYtkInfo"
                    src="https://static.airbob.org/index_fresh/QjE2MDEyMzI3LeWIt+aWsEAzeC5wbmc="
                  />
                </view>
              </view>
            </view>
          </view>
        </view>
        <view class="split-line"></view>
        <view class="card-container" style="border:none">
          <view class="container-top">
            <view class="container-top-title">晨跑</view>
            <span @tap="showRuntime" data-name="晨跑">完整记录</span>
            <view class="arrow"></view>
          </view>
          <view class="run-card">
            <view class="run-detail">
              <view wx:if="{{runTime !== -1 && runTime !== '-1'}}">
                <view>
                  跑操总数：
                  <span>{{runTime}}</span>次
                </view>
              </view>
              <view wx:else>抱歉,查询失败了呢。。。</view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </BaseContainer>
</template>

<script>import wepy from "@wepy/core"
import BaseContainer from "@/components/baseContainer";
import { associationDetail } from "@/api/recruit";
import { getNotification, setMessageRead } from "@/api/notification";
import { mockGetNotification } from "@/mock/notification";
import {
  getDisplay,
  getUserInfo,
  commonInformation,
  getModuleStatus,
  getHomeModule,
  runningCount,
  getPromotionInformation
} from "@/api/common";
import { mockGetExercise } from "@/mock/common";
import { classSchedule, getCourses, assignTimetable } from "@/api/education";
import { campusCardRequestInfo } from "@/api/campusCard";
import { educationSystemInformation } from "@/api/education";
import { mockClassSchedule } from "@/mock/education";
import { mockCampusCardRequestInfo } from "@/mock/campusCard";
import { connect } from "wepy-redux";
import ClassMixin from "../mixins/class.js";
import allSearch from "../mixins/all-search-thing.js";
import QyPopUp from "@/components/qy-popup";
import {
  judgeMemoryModeStatus,
  judgeGraduateStatus
} from "@/store/actions/index";

@connect(
  {
    graduateIdentity(state) {
      return state.graduateReducer.graduateIdentity;
    },
    chooseMemoryMode(state) {
      return state.graduateReducer.chooseMemoryMode;
    }
  },
  {
    judgeMemoryModeStatus,
    judgeGraduateStatus
  }
)

wepy.page(({
  config : {
    navigationBarTitleText: "NJUPT"
    // enablePullDownRefresh: true
  },
  mixins : [ClassMixin, allSearch],
  components : {
    QyPopup: QyPopUp,
    BaseContainer
  },
  data : {
    moreFunc: {},
    courseColor: ["#6AD5E1", "#87E5DA", "#F7C562", "#FFB677", "#FF8364"],
    courses: [],
    noCourseItem: false,
    balance: "正在加载...",
    time: "",
    functionalList: "",
    swiperInfo: [],
    isNewInfo: false,
    runTime: "",
    loadHide: false,
    openPage: false,
    passTime: 5,
    schoolTalkText: "搜点什么吧~",
    // 是否检测到口令
    commandInfoStatus: false,
    // 是否有重要通知
    importantInfoStatus: false,
    // 重要通知
    importantInfo: {},
    // 社团信息
    assoInfo: {},
    showLaboratory: true,
    annualStatus: false, // 年报弹窗
    //开屏跳转
    navigatorTarget: "",
    navigatorAppId: "",
    navigatorUrl: "",
    displayPic: "",
    displayColor: "",
    avatarUrl: [
      "https://static.airbob.org/under-graduate/profile/avatar1.png",
      "https://static.airbob.org/under-graduate/profile/avatar2.png",
      "https://static.airbob.org/under-graduate/profile/avatar3.png"
    ],
    hiGraduateModal: false,
    graduateName: "",
    visitorModeStatus: false,
    classInfo: {},
    isRefreshYkt: false,
    courseToView: "course0"
  },
  computed : {
    isBalanceOk() {
      const exceptions = [
        "暂停服务",
        "密码需要更新",
        "请求失败",
        "正在加载...",
        "需要绑定一卡通"
      ];
      return !exceptions.includes(this.balance);
    }
  },
  // 首页广告
  watch : {
    openPage(newValue, oldValue) {
      if (newValue) {
        wepy.setNavigationBarColor({
          frontColor: "#ffffff",
          backgroundColor:
            this.displayColor || wepy.getStorageSync("display").displayColor,
          animation: {
            duration: 0,
            timingFunc: "easeIn"
          }
        });
        wepy.setNavigationBarTitle({
          title: ""
        });
        wepy.hideTabBar();
        let timer = setInterval(() => {
          this.passTime--;
          if (Number(this.passTime) <= 0) {
            clearInterval(timer);
            this.openPage = false;
            wepy.showTabBar();
            wepy.setNavigationBarColor({
              frontColor: "#000000",
              backgroundColor: "#fff",
              animation: {
                duration: 0,
                timingFunc: "easeIn"
              }
            });
            wepy.setNavigationBarTitle({
              title: "NJUPT"
            });
            this.$apply();
          }
          this.$apply();
        }, 1000);
      }
    },
    classInfo(newValue) {
      const { extraCourse, timetable, assign } = newValue;
      if (timetable) {
        const mergedCourse = extraCourse
          ? timetable.concat(extraCourse)
          : timetable;
        if (assign) {
          const { week, specialDayNum } = assign;
          this.dealCourse(mergedCourse, week, specialDayNum);
        } else {
          this.dealCourse(mergedCourse);
        }
        this.loadHide = true;
        this.$apply();
      }
    }
  },
  methods : {
    goSearch() {
      this.$navigate({
        url: "../others-page/pages/search"
      });
    },
    goInfobox() {
      this.$navigate({
        url: "../others-page/pages/information-box"
      });
    },
    goYkt(e) {
      const name = e.currentTarget.dataset.name;
      this.$navigate({
        url: `../campus-card-page/pages/campus-card-index?name=${name}`
      });
    },
    goEpidemic() {
      this.$navigate({
        url: `../others-page/pages/epidemic`
      });
    },
    async moveTo(e) {
      const name = e.currentTarget.dataset.name;
      if (e.currentTarget.dataset.isNew) {
        let newModule = wepy.getStorageSync("newModule");
        for (let i in newModule) {
          if (newModule[i].moduleName === name) {
            newModule.splice(i, 1);
            wepy.setStorageSync("newModule", newModule);
            break;
          }
        }
        for (let j of this.functionalList) {
          if (j.name === name) {
            j.isNew = false;
          }
        }
      }
      if (
        e.currentTarget.dataset.path === "../others-page/pages/more" &&
        wepy.getStorageSync("indexIcon") === ""
      ) {
        wepy.setStorageSync("indexIcon", this.functionalList);
      }
      this.$navigate({
        url: `${e.currentTarget.dataset.path}?name=${
          e.currentTarget.dataset.name
        }`
      });
    },
    showAllCourse(e) {
      const name = e.currentTarget.dataset.name;
      this.$navigate({
        url: `../edu-admin-page/pages/course?name=${name}`
      });
    },
    showRuntime(e) {
      const name = e.currentTarget.dataset.name;
      this.$navigate({
        url: `../others-page/pages/run?name=${name}`
      });
    },
    // 首页广告
    passOpenPage() {
      this.openPage = false;
      wepy.setNavigationBarColor({
        frontColor: "#000000",
        backgroundColor: "#fff",
        animation: {
          duration: 0
        }
      });
      wepy.setNavigationBarTitle({
        title: "NJUPT"
      });
      wepy.showTabBar();
    },
    // 通过口令跳转到社团详情
    codeToDetail() {
      this.commandInfoStatus = false;
      this.$apply();
      wepy.navigateTo({
        url: `../others-page/pages/associationPages/association-detail?associationName=${
          this.assoInfo.info.associationName
        }&koulingStatus=true&command=${this.assoInfo.command}&fullname=${
          this.assoInfo.info.fullname
        }`
      });
      wepy.setClipboardData({
        data: "剪贴板清空惹~"
      });
    },
    hideHiGraduate() {
      this.hiGraduateModal = false;
      wepy.setStorageSync("graduateModal", true);
    },
    closeCommandInfo() {
      this.commandInfoStatus = false;
    },
    async refreshYtkInfo() {
      const moduleStatus = wepy.getStorageSync("moduleStatus");
      const ytkModuleStatus = moduleStatus.find(x => x.moduleName === "一卡通");
      if (ytkModuleStatus && !ytkModuleStatus.open) {
        this.balance = "暂停服务";
        this.$apply();
      } else {
        this.isRefreshYkt = true;
        this.$apply();
        const { data: response } = await this.judgeCampusCard();
        this.isRefreshYkt = false;
        this.$apply();
        if (response.data) {
          const yktInfoCache = { data: response.data, time: new Date() };
          wepy.setStorageSync("yktInfo", yktInfoCache);
          const { data, time } = yktInfoCache;
          const tempDate = new Date(time);
          const formatTimeString = raw =>
            raw.toString().length < 2 ? "0" + raw.toString() : raw.toString();
          this.time = this.graduateIdentity
            ? `2019-6-20 毕业典礼`
            : `${tempDate.getFullYear()}-${tempDate.getMonth() +
                1}-${tempDate.getDate()} ${formatTimeString(
                tempDate.getHours()
              )}:${formatTimeString(tempDate.getMinutes())}:${formatTimeString(
                tempDate.getSeconds()
              )}`;

          if (this.graduateIdentity) {
            this.balance =
              (Number(data.db_balance) + Number(data.unset_balance)) / 100;
          } else {
            this.balance =
              (Number(data.db_balance) + Number(data.unsettle_amount)) / 100;
          }
          this.$apply();
          wepy.setStorageSync("sno", data.sno);
        } else {
          if (response.errCode === 24) {
            this.balance = "密码需要更新";
          } else if (response.errCode === 34) {
            this.balance = "需要绑定一卡通";
          } else if (response.errCode === 668) {
            this.$parent.showTip(response.errMsg);
          } else {
            this.balance = "请求失败";
          }
          this.$apply();
        }
      }
    },
    prevent() {},
    async closeNotification(e) {
      const { id } = e.currentTarget.dataset;
      this.importantInfoStatus = false;
      const res = await setMessageRead(id);
      if (res.data && res.data.data) {
        this.swiperInfo = this.swiperInfo.filter(info => info.id !== id);
        this.$apply();
      }
    }
  },
  events : {
    changeAnnualStatus() {
      this.annualStatus = false;
    }
  },
  async getBalance() {
    let yktInfoCache = wepy.getStorageSync("yktInfo");
    if (!yktInfoCache) {
      const moduleStatus = wepy.getStorageSync("moduleStatus");
      const ytkModuleStatus = this.visitorModeStatus
        ? { open: true }
        : moduleStatus.find(x => x.moduleName === "一卡通");
      if (ytkModuleStatus && !ytkModuleStatus.open) {
        this.balance = "暂停服务";
        this.$apply();
      } else {
        const { data: response } = await this.judgeCampusCard();
        if (response.data) {
          yktInfoCache = { data: response.data, time: new Date() };
          wepy.setStorageSync("yktInfo", yktInfoCache);
        } else {
          if (response.errCode === 24) {
            this.balance = "密码需要更新";
          } else if (response.errCode === 34) {
            this.balance = "需要绑定一卡通";
          } else {
            this.balance = "请求失败";
          }
          this.$apply();
          return;
        }
      }
    }
    const { data, time } = yktInfoCache;
    const tempDate = new Date(time);
    const formatTimeString = raw =>
      raw.toString().length < 2 ? "0" + raw.toString() : raw.toString();
    this.time = this.graduateIdentity
      ? `2019-6-20 毕业典礼`
      : `${tempDate.getFullYear()}-${tempDate.getMonth() +
          1}-${tempDate.getDate()} ${formatTimeString(
          tempDate.getHours()
        )}:${formatTimeString(tempDate.getMinutes())}:${formatTimeString(
          tempDate.getSeconds()
        )}`;
    if (this.graduateIdentity) {
      this.balance =
        (Number(data.db_balance) + Number(data.unset_balance)) / 100;
    } else {
      this.balance =
        (Number(data.db_balance) + Number(data.unsettle_amount)) / 100;
    }
    this.$apply();
    wepy.setStorageSync("sno", data.sno);
  },
  dealCourse(course, assignWeek = 0, assignDayNum = 0) {
    const now = new Date();
    let common = wepy.getStorageSync("common");
    let nowWeek =
      assignWeek !== 0
        ? assignWeek
        : this.visitorModeStatus
          ? 4
          : parseInt(common.week);
    let todayCourse = this.handleCourses(course, nowWeek);
    let today = assignDayNum !== 0 ? assignDayNum - 1 : now.getDay() - 1;
    today = today === -1 ? 6 : today;
    let allcourses = todayCourse[0][today];
    if (todayCourse[1][today].length >= 1) {
      allcourses.push(...todayCourse[1][today]);
    }
    let colorArr = this.courseColor;
    let nowCourses = [];
    for (let i in allcourses) {
      if (
        allcourses[i].weekarr.indexOf(nowWeek) !== -1 &&
        allcourses[i].weekarr.indexOf(nowWeek) !== "-1"
      ) {
        allcourses[i].time =
          "第" +
          allcourses[i].sectionstart +
          "-" +
          allcourses[i].sectionend +
          "节";
        allcourses[i].bgc = colorArr[i % 5];
        nowCourses.push(allcourses[i]);
      }
    }
    this.courses = nowCourses;
    if (this.courses.length >= 0) {
      this.courses.sort((a, b) => {
        return a.sectionstart - b.sectionstart;
      });
    }
    this.noCourseItem = this.courses.length === 0;
    this.loadHide = true;
    const allMinutes = now.getHours() * 60 + now.getMinutes();
    let courseIndex =
      [
        [8, 45],
        [9, 35],
        [10, 35],
        [11, 25],
        [12, 15],
        [14, 30],
        [15, 20],
        [16, 20],
        [17, 10],
        [19, 15],
        [20, 10],
        [21, 5]
      ].findIndex(x => x[0] * 60 + x[1] > allMinutes) + 1;
    if (courseIndex === 0) {
      courseIndex = 12;
    }
    let currentCourse =
      this.courses.findIndex(x => x.sectionend >= courseIndex) + 1;
    if (currentCourse === 0) {
      currentCourse = this.courses.length + 1;
    }
    for (let i = 0; i < currentCourse - 1; i++) {
      this.courses[i].bgc = "#D8D8D8";
    }
    this.$apply();
    setTimeout(() => {
      this.courseToView = `course${Math.min(
        currentCourse,
        this.courses.length
      )}`;
      this.$apply();
    }, 200);
  },
  async moduleStatusJudge() {
    const moduleStatus = await getModuleStatus();
    const newModule = wepy.getStorageSync("newModule")
      ? wepy.getStorageSync("newModule")
      : [];
    if (moduleStatus.data) {
      const moduleStatusData = moduleStatus.data.data;
      if (wepy.getStorageSync("moduleStatus")) {
        const preModuleStatus = wepy.getStorageSync("moduleStatus");
        for (let i of moduleStatusData) {
          for (let j of preModuleStatus) {
            if (i.moduleName === j.moduleName) {
              if (
                i.isNew &&
                i.notificationHash !== j.notificationHash &&
                !newModule.includes(i)
              ) {
                newModule.push(i);
              }
            }
          }
        }
        if (newModule.length) {
          wepy.setStorageSync("newModule", newModule);
          for (let i of newModule) {
            for (let j of this.functionalList) {
              if (i.moduleName === j.name || j.name === "更多") {
                j.isNew = true;
              }
            }
          }
        }
      }
      wepy.setStorageSync("moduleStatus", moduleStatusData);
    }
  },

  async getHomeModules() {
    const modules = await getHomeModule();
    if (modules.data && modules.data.data) {
      const { allList, homeList } = modules.data.data;
      //  按priority降序排序并添加‘更多’
      this.functionalList = homeList
        ? homeList
            .sort((a, b) => b.priority - a.priority)
            .concat([this.$parent.globalData.moreFunc])
        : this.getDefaultHome();
      //  模块列表分类缓存
      const moduleList = this.getClassifyModules(allList);
      wepy.setStorageSync("moduleList", moduleList);
    } else {
      //  请求失败则取mixins
      this.functionalList = this.getDefaultHome();
      const moduleList = this.getClassifyModules();
      wepy.setStorageSync("moduleList", moduleList);
    }
    wepy.setStorageSync("indexIcon", this.functionalList);
    this.$apply();
  },

  async mockInit() {
    this.functionalList = this.getDefaultHome();
    wepy.setStorageSync("indexIcon", this.functionalList);
    this.getBalance();
    mockClassSchedule().then(res => {
      if (res.data) {
        wepy.setStorageSync("timetable", res.data.data);
        this.dealCourse(res.data.data);
        this.loadHide = true;
        this.$apply();
      }
    });
    mockGetNotification().then(res => {
      if (res.data) {
        const {
          data: { data: notificationList }
        } = res;
        this.swiperInfo = notificationList
          .filter(notification => {
            return !notification.read;
          })
          .sort((prev, next) => prev.createDate < next.createDate);
        if (this.swiperInfo.length > 0) {
          this.isNewInfo = true;
        }
        this.$apply();
      }
    });
    mockGetExercise().then(res => {
      if (res.data.data) {
        this.runTime = res.data.data.totalCount;
        this.$apply();
      }
    });
  },

  async init() {
    //  先让模块列表显示
    this.functionalList = this.getDefaultHome();
    wepy.setStorageSync("indexIcon", this.functionalList);
    const userInfoResponse = await getUserInfo();
    if (userInfoResponse.data) {
      await this.methods.judgeGraduateStatus(
        userInfoResponse.data.data.graduate
      );
      let userInfo = userInfoResponse.data.data;
      userInfo.nativeInformation.avatar = this.avatarUrl[
        Math.floor(Math.random() * 3)
      ];
      wepy.setStorageSync("User", userInfo);

      if (!wepy.getStorageSync("token") || !userInfo.enabled) {
        wepy.reLaunch({
          url: "/others-page/pages/login"
        });
      } else {
        //  获取首页模块
        await this.getHomeModules();
        // 获取消息
        getNotification().then(res => {
          if (res.data && res.data.data) {
            const {
              data: { data: notificationList }
            } = res;
            this.swiperInfo = notificationList
              .filter(notification => {
                return !notification.read;
              })
              .sort((prev, next) => prev.createDate < next.createDate);
            if (this.swiperInfo.length > 0) {
              //  判断未读消息中是否有重要通知
              const importantMsg = this.swiperInfo.find(msg => msg.type === 0);
              if (importantMsg) {
                this.importantInfoStatus = true;
                this.importantInfo = {
                  ...importantMsg,
                  content: importantMsg.content.trim().split("\n")
                };
              }
              this.isNewInfo = true;
            }
            this.$apply();
          }
        });
        this.moduleStatusJudge();
        runningCount().then(res => {
          if (res.data.data) {
            this.runTime = res.data.data.totalCount;
            this.$apply();
          }
        });
        commonInformation().then(common => {
          common.data && wepy.setStorageSync("common", common.data.data);
        });

        this.methods.judgeMemoryModeStatus().then(() => {
          this.checkGraduateMode(userInfo.name);

          this.getBalance();

          // 本科生走 if 里的逻辑
          if (!this.graduateIdentity) {
            classSchedule().then(timetable => {
              if (timetable.data && timetable.data.data) {
                const timetableData = timetable.data.data.timetable;
                wepy.setStorageSync("timetable", timetableData);
                this.classInfo.timetable = timetableData;
                this.$apply();
              }
            });
            getCourses().then(extraCourse => {
              if (extraCourse.data && extraCourse.data.data) {
                const extraCourseData = extraCourse.data.data.map(
                  item => item.courseModel
                );
                wepy.setStorageSync("extraCourse", extraCourseData);
                this.classInfo.extraCourse = extraCourseData;
                this.$apply();
              }
            });
            assignTimetable().then(assign => {
              if (assign.data && assign.data.data) {
                const {
                  semester,
                  specialDayNum,
                  week,
                  year
                } = assign.data.data;
                this.classInfo.assign = { week, specialDayNum };
              }
            });
            const userInfoCache = wepy.getStorageSync("userInfo");

            if (!userInfoCache || !userInfoCache.studentId) {
              educationSystemInformation().then(res => {
                if (res.data && res.data.data) {
                  wepy.setStorageSync("userInfo", res.data.data);
                }
              });
            }
          }
        });
      }
    }
  },

  /**
   * 检查毕业生身份相关逻辑
   */
  checkGraduateMode(name) {
    this.graduateName = name;
    if (this.graduateIdentity && !this.chooseMemoryMode) {
      wepy.navigateTo({
        url: `../others-edu-page/graduatePages/index?name=${name}`
      });
    }
    if (
      this.graduateIdentity &&
      this.chooseMemoryMode &&
      !wepy.getStorageSync("graduateModal")
    ) {
      this.hiGraduateModal = true;
    }
    if (this.graduateIdentity) {
      this.noCourseItem = true;
      this.loadHide = true;
    }
    this.$apply();
  },

  judgeCampusCard() {
    return this.visitorModeStatus
      ? mockCampusCardRequestInfo()
      : campusCardRequestInfo(this.geaduateIdentity);
  },
  async onShow() {
    // 获取上一个页面的路由
    const previousPageRouter = getCurrentPages()[0].__displayReporter
      .showReferpagepath;
    wepy.setNavigationBarColor({
      frontColor: "#000000",
      backgroundColor: "#fff",
      animation: {
        duration: 0
      }
    });
    wepy.setNavigationBarTitle({
      title: "NJUPT"
    });
    wepy.showTabBar();
    const token = wepy.getStorageSync("token");
    const userInfo = wepy.getStorageSync("User");
    if (!this.visitorModeStatus && userInfo) {
      if (token && userInfo && userInfo.enabled) {
        // 从特定页面回来再做对应处理
        switch (previousPageRouter) {
          //  刷新首页模块
          case "others-page/pages/more.html":
            this.functionalList = wepy.getStorageSync("indexIcon");
            if (!this.functionalList.some(item => item.name === "更多")) {
              this.functionalList.push(this.$parent.globalData.moreFunc);
              wepy.setStorageSync("indexIcon", this.functionalList);
            }
            await this.getHomeModules();
            break;

          // 刷新一卡通余额
          case "campus-card-page/pages/campus-card-index.html":
            this.getBalance();
            break;

          // 刷新消息盒子消息
          case "others-page/pages/information-box.html":
            getNotification().then(res => {
              if (res.data && res.data.data) {
                const {
                  data: { data: notificationList }
                } = res;
                this.swiperInfo = notificationList
                  .filter(notification => {
                    return !notification.read;
                  })
                  .sort((prev, next) => prev.createDate < next.createDate);
                if (this.swiperInfo.length > 0) {
                  this.isNewInfo = true;
                }
                this.$apply();
              }
            });
            break;

          // 读课表缓存
          case "edu-admin-page/pages/course.html":
            const timetable = wepy.getStorageSync("timetable");
            if (timetable) {
              this.loadWrong = false;
            }
            break;
        }

        // 判断口令
        const copyData = await wepy.getClipboardData();
        const filterStr = copyData.data.match(/€(.+?)€/g);
        if (filterStr !== null) {
          const filterCommand = filterStr[0].substring(
            1,
            filterStr[0].length - 1
          );
          if (this.assoInfo && filterCommand !== this.assoInfo.command) {
            associationDetail(filterCommand).then(res => {
              if (res.data.data) {
                this.commandInfoStatus = true;
                const { assoInfo, assoInfoDetails } = res.data.data;
                const associationItem = assoInfoDetails.find(x => x.type === 1);
                if (associationItem) {
                  const avatar = associationItem.picUrl;
                  this.assoInfo = {
                    avatar,
                    command: filterCommand,
                    info: assoInfo
                  };
                  this.commandInfoStatus = true;
                  this.$apply();
                }
              }
            });
          }
        }
      }
    }
  },
  /**
   * onLoad后主要是先判断是否为游客模式
   *  如果不是就同时获取开屏，资讯页信息，调用init
   */
  onLoad() {
    this.visitorModeStatus = this.$com.BaseContainer.visitorModeStatus;
    if (this.visitorModeStatus) {
      wepy.$store.dispatch({ type: `SET_GRADUATE_FALSE` });
      this.mockInit();
    } else {
      const token = wepy.getStorageSync("token");
      if (token) {
        // 首页开屏
        getDisplay().then(res => {
          const display = wepy.getStorageSync("display");
          if (res.data && res.data.data !== null) {
            const {
              displayId,
              color,
              picture,
              link,
              appId,
              type
            } = res.data.data;
            if (type === 0) {
              this.navigatorTarget = "miniProgram";
              this.navigatorAppId = appId;
            } else if (type === 1) {
              this.navigatorTarget = "self";
              this.navigatorUrl =
                `../others-page/pages/display-webview?link=` + link;
            } else if (type === 4) {
              this.navigatorTarget = "self";
              this.navigatorUrl = link;
            }
            let count = wepy.getStorageSync("openthePage") || 0;
            switch (true) {
              case displayId !== display.displayId:
                count = 0;
                wepy.setStorageSync("display", {
                  displayPic: picture,
                  displayColor: color,
                  displayId
                });
              case count < 5:
                this.openPage = true;
                this.displayPic = picture;
                this.displayColor = color;
                count++;
                wepy.setStorageSync("openthePage", count);
                break;
              default:
                break;
            }
            this.$apply();
          }
        });
        getPromotionInformation(1, 10).then(res => {
          const { success, data } = res.data;
          if (success) {
            if (data.totalAdCount !== wepy.getStorageSync("newsListSum")) {
              wepy.showTabBarRedDot({
                index: 1
              });
            }
          }
        });
      }
      this.init();
    }
  },
  // async onPullDownRefresh() {
  //   if (!this.openPage) {
  //     await this.init();
  //   }
  //   wepy.stopPullDownRefresh();
  // },
}))</script>

<style lang="stylus" scoped>
vendors = official
@import '../css/search-input'
@import '../css/loading'
.hi-graduate
  position fixed
  background-color rgba(0, 0, 0, 0.8)
  z-index 30000
  width 100vw
  height 100vh
  .hi-graduate-img
    width 311rpx
    height 413rpx
    position absolute
    top 244rpx
    left 318rpx
  .hi-graduate-talk
    width 450rpx
    position absolute
    top 544rpx
    left 151rpx
    color #ffffff
    .graduate-talk-title
      font-weight 400
      font-size 36rpx
      margin-bottom 23rpx
    .graduate-talk-content
      font-size 24rpx
      font-weight 200
    .graduate-divide
      height 23rpx
.split-line
  width 750rpx
  height 15rpx
  background #f5f5f5
.splitLine
  width 710rpx
  height 2rpx
  margin 0 auto
  background rgb(239, 238, 239)
.open-page-container
  height 100vh
  width 100vw
  background-size cover
  background-repeat no-repeat
  background-position bottom center
  .pass-open-page-container
    position absolute
    width 87px
    height 87px
    bottom 0
    right 10px
  .pass-open-page
    position absolute
    right 54rpx
    padding 0rpx 6rpx
    bottom 54rpx
    height 44rpx
    line-height 44rpx
    font-size 24rpx
    color #AAAAAA
    text-align center
    border-radius 20rpx
    border 1rpx solid #AAAAAA
    background #fff
.navbar
  box-shadow 0 6rpx 4rpx 0 rgba(0, 0, 0, 0.05)
  display flex
  align-items center
.search-bar
  padding 20rpx
  position relative
  font-size 30rpx
  width 100%
  box-sizing border-box
  .virsual-placeholder
    width calc(100% - 20px)
    position absolute
    display inline-block
    z-index 1
    color #999CA0
    top 32rpx
    left 30rpx
    text-align center
    .search-icon
      width 30rpx
      height 30rpx
      margin-right 25rpx
      position relative
      top 4rpx
  .search-input
    pointer-events none
    width 100%
.alert-img
  width 45rpx
  height 48rpx
  margin-left 35rpx
  margin-top -8rpx
  &.shake
    animation shaking 1.5s ease-in 1s infinite normal
    transform-origin 50% -20%
    animation-iteration-count 3
    @keyframes shaking
      0%
        transform rotate(0)
      20%
        transform rotate(-10deg)
      40%
        transform rotate(16deg)
      50%
        transform rotate(-16deg)
      60%
        transform rotate(16deg)
      70%
        transform rotate(-16deg)
      80%
        transform rotate(10deg)
      100%
        transform rotate(0)
.functional
  width 750rpx
  display flex
  font-size 28rpx
  flex-wrap wrap
  margin-top 50rpx
  margin-bottom 7rpx
  .functional-item
    width 25%
    margin-bottom 41rpx
    text-align center
    position relative
    .functional-item-image
      width 60rpx
      height 60rpx
      display block
      margin 0 auto
      margin-bottom 10rpx
    .image-red-dot
      position absolute
      top -10rpx
      right 30rpx
      height 25rpx
      width 25rpx
      border-radius 50%
      background #fd2200
.epidemic-container
  width 100vw
  height 90rpx
  margin-bottom 10rpx
  .epidemic-img
    width 80%
    height 100%
    margin 0 auto
    background url("https://static.airbob.org/under-graduate/QjE2MDEyMzI3LWNoZWNrLWluLnBuZw==") no-repeat
    background-size contain
.school-talk-container
  width 550rpx
  margin 0 auto
  .school-talk
    width 550rpx
    min-height 0rpx
    height 130rpx
.notification-container
  position relative
  width 710rpx
  margin 0 auto
  min-height 120rpx
  display flex
  align-items center
  .notification-image
    height 100rpx
    width 100rpx
    background-image url('https://static.airbob.org/under-graduate/%E8%82%96%E8%BE%B0%E6%97%AD%E6%89%81%E5%B9%B3%E5%8C%96.png')
    background-position center
    background-repeat no-repeat
    background-size contain
    margin-left 20rpx
    margin-right 55rpx
    position relative
    .notification-oval
      color #fff
      font-size 26rpx
      width 40rpx
      height 32rpx
      display flex
      align-items center
      justify-content center
      border-radius 100rpx
      border 5rpx solid #fff
      background #fd2200
      position absolute
      top -2px
      right 0
    .move
      animation move 1.2s ease 1s infinite normal
      @keyframes move
        0%
          transform translateY(0)
        50%
          transform translateY(3px)
        100%
          transform translateY(0)
  .notification-content
    position relative
    height 80rpx
    line-height 80rpx
    width 600rpx
    font-size 28rpx
    .swiper-content
      width 500rpx
      height 80rpx
      line-height 80rpx
      overflow hidden
      text-overflow ellipsis
      white-space nowrap
  .notification-arrow
    position absolute
    right 0
    top 50%
    margin-top -13rpx
    width 26rpx
    height 26rpx
    background-image url('https://static.airbob.org/under-graduate/%E5%8F%B3%E7%AE%AD%E5%A4%B4.png')
    background-position center
    background-repeat no-repeat
    background-size contain
.laboratory-container
  width 750rpx
  padding 30rpx 0
  margin 0 auto
  .container-top
    margin 0 20rpx
  .newfunction-container
    width 100%
    display flex
    font-size 28rpx
    flex-wrap wrap
    margin-top 50rpx
    margin-bottom 7rpx
    .functional-item
      width 25%
      margin-bottom 41rpx
      text-align center
      .functional-item-image
        width 60rpx
        height 60rpx
        display block
        margin 0 auto
        margin-bottom 10rpx
.course-container
  width 710rpx
  margin 0 auto
  padding 30rpx 0
  .nocourse-list
    width 710rpx
    height 150rpx
    display flex
    align-items center
    background #FFFFFF
    box-shadow 0 0 20rpx 0 rgba(0, 0, 0, 0.1)
    border-radius 30rpx
    .nocourse-image
      width 200rpx
      height 100rpx
      margin 25rpx 35rpx
      background-image url('https://static.airbob.org/under-graduate/pic_noclass.png')
      background-position center
      background-size contain
      background-repeat no-repeat
    .nocourse-word
      text-align center
      font-family PingFangSC-Regular
      font-size 28rpx
      line-height 150rpx
      color #353535
      letter-spacing -0.62px
    .graduate-word
      font-size 26rpx
      font-family PingFangSC-Regular
      color #353535
  .course-list
    width 100%
    white-space nowrap
    color #fff
    .course-item
      display inline-block
      margin-right 10rpx
      width 270rpx
      height 150rpx
      font-size 24rpx
      border-radius 16rpx
      padding 20rpx
      box-sizing border-box
      .course-thing
        width 270rpx
        display flex
        flex-direction column
        justify-content space-between
        view
          line-height 38rpx
          overflow hidden
          text-overflow ellipsis
          white-space nowrap
.container-top
  position relative
  display flex
  align-items center
  font-size 30rpx
  height 30rpx
  margin-bottom 20rpx
  .container-top-title
    color #353535
    font-weight bold
  span
    position absolute
    font-size 24rpx
    right 35rpx
    color #888888
  .arrow
    position absolute
    top 2rpx
    right 0rpx
    width 26rpx
    height 26rpx
    background-image url('https://static.airbob.org/under-graduate/%E5%8F%B3%E7%AE%AD%E5%A4%B4.png')
    background-position center
    background-repeat no-repeat
    background-size contain
.card-container
  width 710rpx
  margin 0 auto
  padding 30rpx 0
.campus-card
  width 710rpx
  height 280rpx
  background-image url('https://static.airbob.org/under-graduate/%E4%B8%80%E5%8D%A1%E9%80%9A%E5%8D%A1%E7%89%87.png')
  background-position center
  background-repeat no-repeat
  background-size contain
  font-size 28rpx
  text-align center
  .content
    padding-top 50rpx
    .bigger
      font-size 40rpx
      font-weight 600
    .content-container
      display flex
      justify-content center
      align-items center
      flex-direction column
      .refresh-container
        width 160rpx
        height 60rpx
        background-color rgba(255, 255, 255, 0.8)
        display flex
        align-items center
        justify-content center
        border-radius 30rpx
        margin-top 10rpx
        box-shadow 1rpx 1rpx 3rpx rgba(84, 218, 255, 0.5)
        .refresh
          width 40rpx
          height 40rpx
        .refresh-rolling
          animation rolling 0.4s linear 0s infinite
.run-card
  width 710rpx
  height 280rpx
  background-image url('https://static.airbob.org/under-graduate/%E6%99%A8%E8%B7%91%E5%8D%A1%E7%89%87.png')
  background-position center
  background-repeat no-repeat
  background-size contain
  .run-detail
    padding-top 80rpx
    margin-left 40rpx
    font-size 28rpx
    span
      font-weight 600
      font-size 40rpx
.perfect-info
  position fixed
  z-index 99
  top 0
  bottom 0
  left 0
  right 0
  background rgba(0, 0, 0, 0.5)
  display flex
  justify-content center
  .perfect-info-body
    margin auto
    height 300px
    &.notification
      height auto
      .notification-tip
        height 60rpx
        font-size 1rem
        margin-top 20rpx
        line-height 60rpx
        text-align center
        color #cecece
      .notification-close
        width 90%
        height 70rpx
        display flex
        align-items center
        justify-content center
        border-top 2rpx solid #e3e3e3
        font-size 30rpx
        color #1d1d1d
        font-weight 800
    .perfect-img
      display flex
      justify-content center
      margin-bottom -18px
      image
        width 186px
        height 152px
      &.notification
        transform translateY(70rpx)
        image
          width 360rpx
          height 340rpx
    .perfect-info-card
      width 250px
      height 188px
      background #ffffff
      border-radius 9px
      display flex
      align-items center
      flex-direction column
      position relative
      &.notification
        height auto
        min-height 376rpx
        border-top 32rpx solid #50b3cc
        justify-content flex-start
        border-radius 24rpx
      .command-avatar
        position absolute
        top -20px
        view
          background-image url('https://static.airbob.org/under-graduate/face.png')
          background-size 100%
          width 50px
          height 49px
          display flex
          justify-content center
          align-items center
          .command-avatar-img
            width 46px
            height 45px
            background-color #ffffff
            border-radius 50%
      .submission
        width 202px
        height 49px
        margin-bottom 0
        background-image linear-gradient(135deg, #a7f3d5 0%, #45d3fb 100%)
        box-shadow 0px 0px 25px 0px rgba(168, 168, 168, 0.5)
        border-radius 14px
        display flex
        justify-content center
        align-items center
        view
          font-family 'PingFangSC-Semibold'
          font-size 18px
          color #ffffff
      .command-name
        height 28px
        font-family 'PingFangSC-Semibold'
        font-size 20px
        color #606266
        padding-bottom 22px
      .notification-info
        width 85%
        text-align left
        min-height 205rpx
        max-height 50vh
        font-size 1rem
        color #787777
        margin 15rpx
        overflow hidden
        text-overflow ellipsis
        display -webkit-box
        -webkit-line-clamp 16
        -webkit-box-orient vertical
      .perfect-info-tip
        font-size 14px
        color #606266
        font-family 'PingFangSC-Regular'
        height 20px
        text-align center
        padding 43px 0 3px 0
        &.notification
          padding 16rpx 0 0 20rpx
          border-bottom 2rpx solid #e3e3e3
          width 90%
          height auto
          color #1d1d1d
          text-align left
          font-weight 800
          overflow hidden
          text-overflow ellipsis
          display -webkit-box
          -webkit-line-clamp 2
          -webkit-box-orient vertical
@keyframes rolling
  0%
    transform rotate(0deg)
  50%
    transform rotate(180deg)
  100%
    transform rotate(360deg)
</style>


<config>
  {
  "usingComponets": {
    "QyPopUp": "@/components/qy-popup",
    "BaseContainer": "@/components/baseContainer"
  },
  "config": {
    "navigationBarTitleText": "NJUPT"
  }
}
</config>

